#summary Some general info to the devs of DanPriest.
#labels Phase-Implementation

= Introduction =

So, DanPriest have a good team developers now. But it seems noone has begun, and I realise you all need to know what to do and where to start. So here is a guide how to get started along with some words on what I'd like you to do. If there is anything, you can always contact me on mail, msn or a pm on the forum. I'd be happy to help.


= Details =

I will start by showing you how to start, and get ready to code. I'm aware many of you probably know how to do this already, but just in case I wrote a detailed guide.

The first thing you have to do is to download the project. If you don't know how to do it, look at the TortoiseSVN_guide. I wrote: http://code.google.com/p/danpriest/wiki/TortoiseSVN_guide

Now, if you open the folder, you will see a bunch of files and a few folders. You will see that DanPriest is divided into the multiple files. And there is also a DanPriest.cs file. You should *NOT* edit that file. That file is generated by the DanPriest.bat batch file by "glueing" all the partial files together. 

There is also a DanPriest.xml file, this is the file which tells djragects GConfig.dll how the settings window of danpriest should look. Take a look inside and you will understand.

You can now start coding in the partial files, but I would recomend you to use Visual Studio. If you don't feel like paying microsoft or "lend" it from the internet, you can download Visual Studio express edition for free here: http://www.microsoft.com/express/vcsharp/

When you got visual studio installed you can open the project file DanPriest.csproj in Visual Studio and you are ready to code! You should start by reading the code and understanding it. I know it's not at all as well documented as it should be, and I'm sorry for not commenting more. If there is any part your not sure you understand, contact me and I will explain.

Something I've done personally is make a personal version of the .bat file which not only merges the files to DanPriest.cs, but also copies the newly merged file to my /classes directory and overrides the one that's there. So I can test right away.